// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Backend-Tech",
            "email": "asap0208@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/check": {
            "post": {
                "description": "닉네임으로 유저를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "CheckNickname",
                "parameters": [
                    {
                        "description": "CheckNickname Body",
                        "name": "UserAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.GetNicknameBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/request_id": {
            "post": {
                "description": "유저가 있다면 UUID를 받아옵니다. 회원가입되지 않은 유저라면 null을 반환합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get login request ID",
                "parameters": [
                    {
                        "description": "GetLoginRequestID Body",
                        "name": "UserAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.GetLoginRequestIDBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/sign": {
            "post": {
                "description": "유저를 insert하고 유저 정보를 가져옵니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "SignUp Body",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.SignUpBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/user": {
            "post": {
                "description": "유저의 정보를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "GetUserInfo",
                "parameters": [
                    {
                        "description": "GetUserInfo Body",
                        "name": "UserAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.GetUserInfoBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/reports/comments/{id}": {
            "patch": {
                "description": "해당 댓글을 신고합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "ReportCommentByID",
                "parameters": [
                    {
                        "description": "ReportCommentByID Body",
                        "name": "UserNickname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.GetNicknameBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/reports/videos/{id}": {
            "patch": {
                "description": "해당 비디오를 신고합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "ReportOnDemandByID",
                "parameters": [
                    {
                        "description": "ReportOnDemandByID Body",
                        "name": "Nickname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.GetNicknameBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/videos": {
            "get": {
                "description": "카테고리 별 전체 비디오를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "GetOnDemands",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CategoryID",
                        "name": "categoryId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetOnDemandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.GetOnDemandResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.GetOnDemandResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/videos/{id}": {
            "get": {
                "description": "비디오 상세 페이지를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "GetOnDemandByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetOnDemandByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "비디오를 업데이트합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "PatchOnDemandByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/videos/{id}/comments": {
            "get": {
                "description": "해당 비디오의 전체 댓글을 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "GetComments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "댓글을 작성합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "CreateComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Comment",
                        "name": "CreateCommentDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.CreateCommentDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "댓글을 삭제합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "DeleteCommentByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "comment_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "댓글을 수정합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "PatchCommentByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Comment",
                        "name": "UpdateCommentDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.UpdateCommentDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.BoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.DefaultDataResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.CreateCommentDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "database.UpdateCommentDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "http.BoolResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "http.DefaultDataResponse": {
            "type": "object",
            "properties": {
                "result": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "http.DefaultResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "http.GetLoginRequestIDBody": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                }
            }
        },
        "http.GetNicknameBody": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                }
            }
        },
        "http.GetOnDemandByIDResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/http.LillyVideo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "http.GetOnDemandResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.LillyVideo"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "http.GetUserInfoBody": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                }
            }
        },
        "http.LillyVideo": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cid": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "thumbnail_uri": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "video_uri": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "http.LoginResponse": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string"
                }
            }
        },
        "http.SignUpBody": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "127.0.0.1:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Lillybox Backend",
	Description:      "This is API Documentation Lillybox Backend",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
